diff --git a/node_modules/@ionic/react/dist/index.esm.js b/node_modules/@ionic/react/dist/index.esm.js
index cf48678..66a9f77 100644
--- a/node_modules/@ionic/react/dist/index.esm.js
+++ b/node_modules/@ionic/react/dist/index.esm.js
@@ -258,13 +258,17 @@ const getClassName = (classList, newProps, oldProps) => {
  * Checks if an event is supported in the current execution environment.
  * @license Modernizr 3.0.0pre (Custom Build) | MIT
  */
-const isCoveredByReact = (eventNameSuffix, doc = document) => {
-    const eventName = 'on' + eventNameSuffix;
-    let isSupported = eventName in doc;
-    if (!isSupported) {
-        const element = doc.createElement('div');
-        element.setAttribute(eventName, 'return;');
-        isSupported = typeof element[eventName] === 'function';
+const isCoveredByReact = (eventNameSuffix, doc) => {
+    let isSupported = false
+    if (!doc && typeof document !== 'undefined') {
+        doc = document
+        const eventName = 'on' + eventNameSuffix;
+        isSupported = eventName in doc;
+        if (!isSupported) {
+            const element = doc.createElement('div');
+            element.setAttribute(eventName, 'return;');
+            isSupported = typeof element[eventName] === 'function';
+        }
     }
     return isSupported;
 };
@@ -969,7 +973,9 @@ addIcons({
 });
 // TODO: defineCustomElements() is asyncronous
 // We need to use the promise
-defineCustomElements(window);
+if (typeof window !== 'undefined') {
+    defineCustomElements(window);
+}
 
 export { CreateAnimation, DefaultIonLifeCycleContext, IonActionSheet, IonAlert, IonApp, IonAvatar, IonBackButton, IonBackdrop, IonBadge, IonButton, IonButtons, IonCard, IonCardContent, IonCardHeader, IonCardSubtitle, IonCardTitle, IonCheckbox, IonChip, IonCol, IonContent, IonDatetime, IonFab, IonFabButton, IonFabList, IonFooter, IonGrid, IonHeader, IonIcon, IonImg, IonInfiniteScroll, IonInfiniteScrollContent, IonInput, IonItem, IonItemDivider, IonItemGroup, IonItemOption, IonItemOptions, IonItemSliding, IonLabel, IonLifeCycleContext, IonList, IonListHeader, IonLoading, IonMenu, IonMenuButton, IonMenuToggle, IonModal, IonNav, IonNote, IonPage, IonPicker, IonPickerColumn, IonPopover, IonProgressBar, IonRadio, IonRadioGroup, IonRange, IonRefresher, IonRefresherContent, IonReorder, IonReorderGroup, IonRippleEffect, IonRouterLink, IonRouterOutlet, IonRow, IonSearchbar, IonSegment, IonSegmentButton, IonSelect, IonSelectOption, IonSelectPopover, IonSkeletonText, IonSlide, IonSlides, IonSpinner, IonSplitPane, IonTab, IonTabBar, IonTabButton, IonTabs, IonText, IonTextarea, IonThumbnail, IonTitle, IonToast, IonToggle, IonToolbar, IonVirtualScroll, NavContext, getConfig, getPlatforms, isPlatform, useIonViewDidEnter, useIonViewDidLeave, useIonViewWillEnter, useIonViewWillLeave, withIonLifeCycle };
 //# sourceMappingURL=index.esm.js.map
